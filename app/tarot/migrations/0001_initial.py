# Generated by Django 5.1.5 on 2025-08-27 07:53

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tg_bot', '0032_remove_extendedmeaning_category_base_and_more'),  # убедись, что выполнена
    ]

    operations = [
        # Шаг 1: Физически переименовываем таблицы в БД
        migrations.RunSQL("ALTER TABLE tg_bot_oraculumdeck RENAME TO tarot_oraculumdeck;"),
        migrations.RunSQL("ALTER TABLE tg_bot_oraculumitem RENAME TO tarot_oraculumitem;"),
        migrations.RunSQL("ALTER TABLE tg_bot_tarotcard RENAME TO tarot_tarotcard;"),
        migrations.RunSQL("ALTER TABLE tg_bot_tarotdeck RENAME TO tarot_tarotdeck;"),
        migrations.RunSQL("ALTER TABLE tg_bot_tarotcarditem RENAME TO tarot_tarotcarditem;"),
        migrations.RunSQL("ALTER TABLE tg_bot_tarotmeaningcategory RENAME TO tarot_tarotmeaningcategory;"),
        migrations.RunSQL("ALTER TABLE tg_bot_extendedmeaning RENAME TO tarot_extendedmeaning;"),
        migrations.RunSQL("ALTER TABLE tg_bot_rune RENAME TO tarot_rune;"),
        migrations.RunSQL("ALTER TABLE tg_bot_tarotuserreading RENAME TO tarot_tarotuserreading;"),

        # Шаг 2: Говорим Django, что модели теперь в `tarot`, но НЕ создаем таблицы
        migrations.SeparateDatabaseAndState(
            database_operations=[],  # БД уже изменена выше
            state_operations=[
        migrations.CreateModel(
            name='OraculumDeck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Название колоды (например, 'Колода МЛАДЕНЦА').", max_length=255, verbose_name='Название колоды')),
                ('description', models.TextField(blank=True, help_text='Краткое описание колоды.', null=True, verbose_name='Описание колоды')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания колоды.', verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Tarot: Колода оракула',
                'verbose_name_plural': 'Tarot: Колоды оракула',
            },
        ),
        migrations.CreateModel(
            name='Rune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Тип руны')),
                ('symbol', models.CharField(max_length=10, verbose_name='Символ руны')),
                ('sticker', models.CharField(max_length=100, verbose_name='ID стикера')),
                ('straight_keys', models.TextField(verbose_name='Ключи (прямое)')),
                ('straight_meaning', models.TextField(verbose_name='Значение (прямое)')),
                ('straight_pos_1', models.TextField(verbose_name='Позиция 1 (прямое)')),
                ('straight_pos_2', models.TextField(verbose_name='Позиция 2 (прямое)')),
                ('straight_pos_3', models.TextField(verbose_name='Позиция 3 (прямое)')),
                ('inverted_keys', models.TextField(blank=True, null=True, verbose_name='Ключи (перевернутое)')),
                ('inverted_meaning', models.TextField(blank=True, null=True, verbose_name='Значение (перевернутое)')),
                ('inverted_pos_1', models.TextField(blank=True, null=True, verbose_name='Позиция 1 (перевернутое)')),
                ('inverted_pos_2', models.TextField(blank=True, null=True, verbose_name='Позиция 2 (перевернутое)')),
                ('inverted_pos_3', models.TextField(blank=True, null=True, verbose_name='Позиция 3 (перевернутое)')),
            ],
            options={
                'verbose_name': 'Tarot: Руна',
                'verbose_name_plural': 'Tarot: Руны',
            },
        ),
        migrations.CreateModel(
            name='TarotCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_id', models.CharField(max_length=10, unique=True, verbose_name='ID карты')),
                ('name', models.CharField(max_length=255, verbose_name='Название карты')),
                ('meaning', models.TextField(verbose_name='Основное значение')),
                ('meaning_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на значение')),
                ('is_major', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Tarot: Карта Таро',
                'verbose_name_plural': 'Tarot: Карты Таро',
            },
        ),
        migrations.CreateModel(
            name='TarotDeck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название колоды')),
                ('link', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Ссылка на колоду')),
            ],
            options={
                'verbose_name': 'Tarot: Колода',
                'verbose_name_plural': 'Tarot: Колоды',
            },
        ),
        migrations.CreateModel(
            name='TarotMeaningCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Tarot: Категория',
                'verbose_name_plural': 'Tarot: Категории',
            },
        ),
        migrations.CreateModel(
            name='OraculumItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_id', models.CharField(help_text='Идентификатор файла (например, изображения карты).', max_length=255, verbose_name='ID файла')),
                ('name', models.CharField(help_text="Название карты (например, 'МЛАДЕНЕЦ').", max_length=255, verbose_name='Название карты')),
                ('description', models.TextField(blank=True, help_text='Краткое описание карты.', null=True, verbose_name='Описание карты')),
                ('direct', models.TextField(blank=True, help_text='Значение карты в прямом положении.', null=True, verbose_name='Прямое значение')),
                ('inverted', models.TextField(blank=True, help_text='Значение карты в перевернутом положении.', null=True, verbose_name='Перевернутое значение')),
                ('deck', models.ForeignKey(help_text='Колода, к которой относится карта.', on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='tarot.oraculumdeck', verbose_name='Колода')),
            ],
            options={
                'verbose_name': 'Tarot: Карта оракула',
                'verbose_name_plural': 'Tarot: Карты оракула',
            },
        ),
        migrations.CreateModel(
            name='ExtendedMeaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('text', models.TextField(verbose_name='Текст значения')),
                ('tarot_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extended_meanings', to='tarot.tarotcard')),
                ('category_base', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cat', to='tarot.tarotmeaningcategory')),
            ],
            options={
                'verbose_name': 'Tarot: Расширенное толкование',
                'verbose_name_plural': 'Tarot: Расширенные толкования',
            },
        ),
        migrations.CreateModel(
            name='TarotCardItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_id', models.CharField(max_length=255, verbose_name='ID изображения')),
                ('tarot_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deck_cards', to='tarot.tarotcard', verbose_name='Карта Таро')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='tarot.tarotdeck', verbose_name='Колода')),
            ],
            options={
                'verbose_name': 'Tarot: Карта в колоде',
                'verbose_name_plural': 'Tarot: Карты в колодах',
                'unique_together': {('deck', 'tarot_card')},
            },
        ),
        migrations.CreateModel(
            name='TarotUserReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата гадания')),
                ('text', models.TextField(blank=True, verbose_name='Текст гадания')),
                ('message_id', models.IntegerField(blank=True, null=True, verbose_name='ID сообщения')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readings', to='tg_bot.tguser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Tarot: Пользовательское гадание',
                'verbose_name_plural': 'Tarot: Пользовательские гадания',
                'indexes': [models.Index(fields=['user', 'date'], name='tarot_tarot_user_id_e7eb00_idx')],
                    },
                ),
            ],
        ),
    ]